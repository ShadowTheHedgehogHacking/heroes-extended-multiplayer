; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28316.0 

	TITLE	C:\Users\DonutStopGaming\Desktop\Mod\setGen.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?OneFileUsualName@TObjSetGen@@2AAPADA		; TObjSetGen::OneFileUsualName
PUBLIC	?objTable@TObjSetGen@@2AAPAUSETOBJ_PARAM@@A	; TObjSetGen::objTable
PUBLIC	?SetGenTp@@3AAPAUTObjSetGen@@A			; SetGenTp
msvcjmc	SEGMENT
__F2BDCE38_pch@h DB 01H
__6EE8A1C6_mod@pch DB 01H
__AE021499_setGen@cpp DB 01H
__BB40F913_TObject@hpp DB 01H
msvcjmc	ENDS
_DATA	SEGMENT
?OneFileUsualName@TObjSetGen@@2AAPADA DD 0a23d28H	; TObjSetGen::OneFileUsualName
?objTable@TObjSetGen@@2AAPAUSETOBJ_PARAM@@A DD 0a825d8H	; TObjSetGen::objTable
?SetGenTp@@3AAPAUTObjSetGen@@A DD 0a7784cH		; SetGenTp
_DATA	ENDS
PUBLIC	?CheckRangeOutWithoutIgnorRangeFlag@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z ; TObjSetObj::CheckRangeOutWithoutIgnorRangeFlag
PUBLIC	?CheckRangeOut@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z ; TObjSetObj::CheckRangeOut
PUBLIC	?setobjCheckRangeOut2_hook@@YAXPAURwV3d@@M@Z	; setobjCheckRangeOut2_hook
PUBLIC	?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z		; setobjCheckRangeOut2
PUBLIC	?ObjSwitchesAreAllOn@@YAHE@Z			; ObjSwitchesAreAllOn
PUBLIC	__JustMyCode_Default
PUBLIC	__real@4059000000000000
EXTRN	?GetLeaderPlayerNo@TObjTeam@@QAEDXZ:PROC	; TObjTeam::GetLeaderPlayerNo
EXTRN	?TstBit@sBitFlag@@QAEII@Z:PROC			; sBitFlag::TstBit
EXTRN	?GetPlayerPositionHistory@PlayerMaster@@SAPAURwV3d@@HE@Z:PROC ; PlayerMaster::GetPlayerPositionHistory
EXTRN	?Distance2P2P@@YAMPBURwV3d@@0@Z:PROC		; Distance2P2P
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?teamTOp@@3PAPAUTObjTeam@@A:DWORD		; teamTOp
EXTRN	?pModeSwitch@@3AAPAUMODESWITCH@@A:DWORD		; pModeSwitch
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\setGen.cpp
;	COMDAT ?ObjSwitchesAreAllOn@@YAHE@Z
_TEXT	SEGMENT
_v4$ = -32						; size = 4
_v3$ = -20						; size = 2
_v1$ = -8						; size = 4
_a1$ = 8						; size = 1
?ObjSwitchesAreAllOn@@YAHE@Z PROC			; ObjSwitchesAreAllOn, COMDAT

; 47   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00012	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AE021499_setGen@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 48   : 	int v1; // ecx
; 49   : 	__int16 v3; // ax
; 50   : 	int v4; // eax
; 51   : 
; 52   : 	v1 = *(int*)(SetGenTp + 4 * a1 + 0x30);             // #inline TObjSetGen::GetCommunicateList((uchar))

  00028	0f b6 45 08	 movzx	 eax, BYTE PTR _a1$[ebp]
  0002c	c1 e0 02	 shl	 eax, 2
  0002f	69 c8 54 0a 00
	00		 imul	 ecx, eax, 2644
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SetGenTp@@3AAPAUTObjSetGen@@A ; SetGenTp
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	8b 8c 08 c0 ef
	01 00		 mov	 ecx, DWORD PTR [eax+ecx+126912]
  00044	89 4d f8	 mov	 DWORD PTR _v1$[ebp], ecx

; 53   : 	if (!v1)

  00047	83 7d f8 00	 cmp	 DWORD PTR _v1$[ebp], 0
  0004b	75 04		 jne	 SHORT $LN2@ObjSwitche

; 54   : 	{
; 55   : 		return 0;

  0004d	33 c0		 xor	 eax, eax
  0004f	eb 6e		 jmp	 SHORT $LN1@ObjSwitche
$LN2@ObjSwitche:

; 56   : 	}
; 57   : 	while (1)

  00051	b8 01 00 00 00	 mov	 eax, 1
  00056	85 c0		 test	 eax, eax
  00058	74 63		 je	 SHORT $LN3@ObjSwitche

; 58   : 	{
; 59   : 		v3 = *(short*)(v1 + 0x28);

  0005a	8b 45 f8	 mov	 eax, DWORD PTR _v1$[ebp]
  0005d	66 8b 48 28	 mov	 cx, WORD PTR [eax+40]
  00061	66 89 4d ec	 mov	 WORD PTR _v3$[ebp], cx

; 60   : 		if (v3 == 5 || v3 == 7 || v3 == 6 || v3 == 0x1104)

  00065	0f bf 45 ec	 movsx	 eax, WORD PTR _v3$[ebp]
  00069	83 f8 05	 cmp	 eax, 5
  0006c	74 1d		 je	 SHORT $LN6@ObjSwitche
  0006e	0f bf 45 ec	 movsx	 eax, WORD PTR _v3$[ebp]
  00072	83 f8 07	 cmp	 eax, 7
  00075	74 14		 je	 SHORT $LN6@ObjSwitche
  00077	0f bf 45 ec	 movsx	 eax, WORD PTR _v3$[ebp]
  0007b	83 f8 06	 cmp	 eax, 6
  0007e	74 0b		 je	 SHORT $LN6@ObjSwitche
  00080	0f bf 45 ec	 movsx	 eax, WORD PTR _v3$[ebp]
  00084	3d 04 11 00 00	 cmp	 eax, 4356		; 00001104H
  00089	75 1a		 jne	 SHORT $LN5@ObjSwitche
$LN6@ObjSwitche:

; 61   : 		{
; 62   : 			v4 = *(int*)(v1 + 0x30);

  0008b	8b 45 f8	 mov	 eax, DWORD PTR _v1$[ebp]
  0008e	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00091	89 4d e0	 mov	 DWORD PTR _v4$[ebp], ecx

; 63   : 			if (!v4 || *(int*)(v4 + 0x10) != 2)

  00094	83 7d e0 00	 cmp	 DWORD PTR _v4$[ebp], 0
  00098	74 09		 je	 SHORT $LN8@ObjSwitche
  0009a	8b 45 e0	 mov	 eax, DWORD PTR _v4$[ebp]
  0009d	83 78 10 02	 cmp	 DWORD PTR [eax+16], 2
  000a1	74 02		 je	 SHORT $LN5@ObjSwitche
$LN8@ObjSwitche:

; 64   : 			{
; 65   : 				break;

  000a3	eb 18		 jmp	 SHORT $LN3@ObjSwitche
$LN5@ObjSwitche:

; 66   : 			}
; 67   : 		}
; 68   : 		v1 = *(int*)(v1 + 0x38);

  000a5	8b 45 f8	 mov	 eax, DWORD PTR _v1$[ebp]
  000a8	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000ab	89 4d f8	 mov	 DWORD PTR _v1$[ebp], ecx

; 69   : 		if (!v1)

  000ae	83 7d f8 00	 cmp	 DWORD PTR _v1$[ebp], 0
  000b2	75 07		 jne	 SHORT $LN9@ObjSwitche

; 70   : 		{
; 71   : 			return 1;

  000b4	b8 01 00 00 00	 mov	 eax, 1
  000b9	eb 04		 jmp	 SHORT $LN1@ObjSwitche
$LN9@ObjSwitche:

; 72   : 		}
; 73   : 	}

  000bb	eb 94		 jmp	 SHORT $LN2@ObjSwitche
$LN3@ObjSwitche:

; 74   : 	return 0;

  000bd	33 c0		 xor	 eax, eax
$LN1@ObjSwitche:

; 75   : }

  000bf	5f		 pop	 edi
  000c0	5e		 pop	 esi
  000c1	5b		 pop	 ebx
  000c2	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000c8	3b ec		 cmp	 ebp, esp
  000ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
?ObjSwitchesAreAllOn@@YAHE@Z ENDP			; ObjSwitchesAreAllOn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\setGen.cpp
;	COMDAT ?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z
_TEXT	SEGMENT
tv146 = -196						; size = 4
tv134 = -196						; size = 4
_position$ = 8						; size = 4
_range$ = 12						; size = 4
?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z PROC		; setobjCheckRangeOut2, COMDAT

; 30   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AE021499_setGen@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 31   : 	if (Distance2P2P(PlayerMaster::GetPlayerPositionHistory(teamTOp[0]->GetLeaderPlayerNo(), 0), position) < range)

  00028	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	b9 04 00 00 00	 mov	 ecx, 4
  00033	6b d1 00	 imul	 edx, ecx, 0
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?teamTOp@@3PAPAUTObjTeam@@A ; teamTOp
  0003b	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  0003e	e8 00 00 00 00	 call	 ?GetLeaderPlayerNo@TObjTeam@@QAEDXZ ; TObjTeam::GetLeaderPlayerNo
  00043	0f be c8	 movsx	 ecx, al
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ?GetPlayerPositionHistory@PlayerMaster@@SAPAURwV3d@@HE@Z ; PlayerMaster::GetPlayerPositionHistory
  0004c	83 c4 08	 add	 esp, 8
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?Distance2P2P@@YAMPBURwV3d@@0@Z ; Distance2P2P
  00055	83 c4 08	 add	 esp, 8
  00058	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv134[ebp]
  0005e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _range$[ebp]
  00063	0f 2f 85 3c ff
	ff ff		 comiss	 xmm0, DWORD PTR tv134[ebp]
  0006a	76 04		 jbe	 SHORT $LN2@setobjChec

; 32   : 	{
; 33   : 		return false;

  0006c	33 c0		 xor	 eax, eax
  0006e	eb 5d		 jmp	 SHORT $LN1@setobjChec
$LN2@setobjChec:

; 34   : 	}
; 35   : 	if (pModeSwitch->is2PMode)

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pModeSwitch@@3AAPAUMODESWITCH@@A ; pModeSwitch
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	0f be 51 1e	 movsx	 edx, BYTE PTR [ecx+30]
  0007b	85 d2		 test	 edx, edx
  0007d	74 49		 je	 SHORT $LN4@setobjChec

; 36   : 	{
; 37   : 		if (Distance2P2P(PlayerMaster::GetPlayerPositionHistory(teamTOp[1]->GetLeaderPlayerNo(), 0), position) < range)

  0007f	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00082	50		 push	 eax
  00083	6a 00		 push	 0
  00085	b9 04 00 00 00	 mov	 ecx, 4
  0008a	c1 e1 00	 shl	 ecx, 0
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?teamTOp@@3PAPAUTObjTeam@@A ; teamTOp
  00093	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  00096	e8 00 00 00 00	 call	 ?GetLeaderPlayerNo@TObjTeam@@QAEDXZ ; TObjTeam::GetLeaderPlayerNo
  0009b	0f be c0	 movsx	 eax, al
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?GetPlayerPositionHistory@PlayerMaster@@SAPAURwV3d@@HE@Z ; PlayerMaster::GetPlayerPositionHistory
  000a4	83 c4 08	 add	 esp, 8
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?Distance2P2P@@YAMPBURwV3d@@0@Z ; Distance2P2P
  000ad	83 c4 08	 add	 esp, 8
  000b0	d9 9d 3c ff ff
	ff		 fstp	 DWORD PTR tv146[ebp]
  000b6	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _range$[ebp]
  000bb	0f 2f 85 3c ff
	ff ff		 comiss	 xmm0, DWORD PTR tv146[ebp]
  000c2	76 04		 jbe	 SHORT $LN4@setobjChec

; 38   : 		{
; 39   : 			return false;

  000c4	33 c0		 xor	 eax, eax
  000c6	eb 05		 jmp	 SHORT $LN1@setobjChec
$LN4@setobjChec:

; 40   : 		}
; 41   : 	}
; 42   : 	return true;

  000c8	b8 01 00 00 00	 mov	 eax, 1
$LN1@setobjChec:

; 43   : }

  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx
  000d0	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  000d6	3b ec		 cmp	 ebp, esp
  000d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z ENDP		; setobjCheckRangeOut2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\setGen.cpp
;	COMDAT ?setobjCheckRangeOut2_hook@@YAXPAURwV3d@@M@Z
_TEXT	SEGMENT
_position$ = 8						; size = 4
_a2$ = 12						; size = 4
?setobjCheckRangeOut2_hook@@YAXPAURwV3d@@M@Z PROC	; setobjCheckRangeOut2_hook, COMDAT

; 81   : 	__asm 
; 82   : 	{
; 83   : 		push [esp + 0x4];

  00000	ff 74 24 04	 push	 DWORD PTR [esp+4]

; 84   : 		push ecx;

  00004	51		 push	 ecx

; 85   : 		call setobjCheckRangeOut2;

  00005	e8 00 00 00 00	 call	 ?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z ; setobjCheckRangeOut2

; 86   : 		add esp, 0x8;

  0000a	83 c4 08	 add	 esp, 8

; 87   : 		ret;

  0000d	c3		 ret	 0
?setobjCheckRangeOut2_hook@@YAXPAURwV3d@@M@Z ENDP	; setobjCheckRangeOut2_hook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\setGen.cpp
;	COMDAT ?CheckRangeOut@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z
_TEXT	SEGMENT
_v1$1 = -8						; size = 4
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
?CheckRangeOut@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z PROC	; TObjSetObj::CheckRangeOut, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AE021499_setGen@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 21   : 	if (!(*(sBitFlag*)(char*)(a1->SETFlag_HHC)).TstBit(0x400))  //#inline TObjSetObj::CheckMustKill((void))

  00028	68 00 04 00 00	 push	 1024			; 00000400H
  0002d	8b 45 08	 mov	 eax, DWORD PTR _a1$[ebp]
  00030	0f be 48 18	 movsx	 ecx, BYTE PTR [eax+24]
  00034	e8 00 00 00 00	 call	 ?TstBit@sBitFlag@@QAEII@Z ; sBitFlag::TstBit
  00039	85 c0		 test	 eax, eax
  0003b	75 4e		 jne	 SHORT $LN2@CheckRange

; 22   : 	{
; 23   : 		int v1 = (a1->renderDistance + 1) * 100.0 * (a1->renderDistance + 1) * 100.0;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _a1$[ebp]
  00040	0f be 48 2b	 movsx	 ecx, BYTE PTR [eax+43]
  00044	83 c1 01	 add	 ecx, 1
  00047	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  0004b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00053	8b 55 08	 mov	 edx, DWORD PTR _a1$[ebp]
  00056	0f be 42 2b	 movsx	 eax, BYTE PTR [edx+43]
  0005a	83 c0 01	 add	 eax, 1
  0005d	f2 0f 2a c8	 cvtsi2sd xmm1, eax
  00061	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00065	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  0006d	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  00071	89 4d f8	 mov	 DWORD PTR _v1$1[ebp], ecx

; 24   : 		return setobjCheckRangeOut2(&a1->position, v1);

  00074	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _v1$1[ebp]
  00079	51		 push	 ecx
  0007a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007f	8b 45 08	 mov	 eax, DWORD PTR _a1$[ebp]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z ; setobjCheckRangeOut2
  00088	83 c4 08	 add	 esp, 8
$LN2@CheckRange:

; 25   : 	}
; 26   : }

  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx
  0008e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00094	3b ec		 cmp	 ebp, esp
  00096	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c3		 ret	 0
?CheckRangeOut@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z ENDP	; TObjSetObj::CheckRangeOut
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\setGen.cpp
;	COMDAT ?CheckRangeOutWithoutIgnorRangeFlag@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z
_TEXT	SEGMENT
_v1$ = -8						; size = 4
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
?CheckRangeOutWithoutIgnorRangeFlag@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z PROC ; TObjSetObj::CheckRangeOutWithoutIgnorRangeFlag, COMDAT

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AE021499_setGen@cpp
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 14   : 	int v1 = (a1->renderDistance + 1) * 100.0 * (a1->renderDistance + 1) * 100.0;

  00028	8b 45 08	 mov	 eax, DWORD PTR _a1$[ebp]
  0002b	0f be 48 2b	 movsx	 ecx, BYTE PTR [eax+43]
  0002f	83 c1 01	 add	 ecx, 1
  00032	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00036	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  0003e	8b 55 08	 mov	 edx, DWORD PTR _a1$[ebp]
  00041	0f be 42 2b	 movsx	 eax, BYTE PTR [edx+43]
  00045	83 c0 01	 add	 eax, 1
  00048	f2 0f 2a c8	 cvtsi2sd xmm1, eax
  0004c	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00050	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00058	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  0005c	89 4d f8	 mov	 DWORD PTR _v1$[ebp], ecx

; 15   : 	return setobjCheckRangeOut2(&a1->position, v1);

  0005f	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _v1$[ebp]
  00064	51		 push	 ecx
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	8b 45 08	 mov	 eax, DWORD PTR _a1$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z ; setobjCheckRangeOut2
  00073	83 c4 08	 add	 esp, 8

; 16   : }

  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
?CheckRangeOutWithoutIgnorRangeFlag@TObjSetObj@@SAHPAUSETOBJ_PARAM@@M@Z ENDP ; TObjSetObj::CheckRangeOutWithoutIgnorRangeFlag
_TEXT	ENDS
END
