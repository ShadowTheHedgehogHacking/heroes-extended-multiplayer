; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28316.0 

	TITLE	C:\Users\DonutStopGaming\Desktop\Mod\o_warp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F2BDCE38_pch@h DB 01H
__6EE8A1C6_mod@pch DB 01H
__CB6E2F36_o_warp@cpp DB 01H
__BB40F913_TObject@hpp DB 01H
msvcjmc	ENDS
PUBLIC	?checkCollision@TObjWarp@@QAEXXZ		; TObjWarp::checkCollision
PUBLIC	?Exec@TObjWarp@@UAEXXZ				; TObjWarp::Exec
PUBLIC	?TObjWarp_Exec_Hook@@YAXXZ			; TObjWarp_Exec_Hook
PUBLIC	__JustMyCode_Default
PUBLIC	__real@4059000000000000
EXTRN	?Kill@TObject@@QAEXXZ:PROC			; TObject::Kill
EXTRN	?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z:PROC	; setobjCheckRangeOut2
EXTRN	?GetCharacterId@C_COLLI@@QAEHXZ:PROC		; C_COLLI::GetCharacterId
EXTRN	?IsHitPlayer@C_COLLI@@QAEPAU1@XZ:PROC		; C_COLLI::IsHitPlayer
EXTRN	?Entry@C_COLLI@@QAEHPAURwV3d@@PAUsAngle@@@Z:PROC ; C_COLLI::Entry
EXTRN	?ClearSearch@CCL_MASTER@@SAXXZ:PROC		; CCL_MASTER::ClearSearch
EXTRN	?GetPlayerNumberFromCCLCharacterId@@YAHH@Z:PROC	; GetPlayerNumberFromCCLCharacterId
EXTRN	?GetLeaderPlayerNo@TObjTeam@@QAEDXZ:PROC	; TObjTeam::GetLeaderPlayerNo
EXTRN	?WarpCameraAndPlayer@TObjCamera@@SAXPAURwV3d@@D@Z:PROC ; TObjCamera::WarpCameraAndPlayer
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?teamTOp@@3PAPAUTObjTeam@@A:DWORD		; teamTOp
EXTRN	?playerTOp@@3QAPAUTObjPlayer@@A:DWORD		; playerTOp
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\o_warp.cpp
;	COMDAT ?TObjWarp_Exec_Hook@@YAXXZ
_TEXT	SEGMENT
_v1$ = -8						; size = 4
?TObjWarp_Exec_Hook@@YAXXZ PROC				; TObjWarp_Exec_Hook, COMDAT

; 49   :     TObjWarp* v1;
; 50   :     __asm
; 51   :     {
; 52   :         mov v1, esi;

  00000	89 75 f8	 mov	 DWORD PTR _v1$[ebp], esi

; 53   :         mov ecx, esi;

  00003	8b ce		 mov	 ecx, esi

; 54   :         call TObjWarp::Exec;

  00005	e8 00 00 00 00	 call	 ?Exec@TObjWarp@@UAEXXZ	; TObjWarp::Exec

; 55   :         ret;

  0000a	c3		 ret	 0
?TObjWarp_Exec_Hook@@YAXXZ ENDP				; TObjWarp_Exec_Hook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\o_warp.cpp
;	COMDAT ?Exec@TObjWarp@@UAEXXZ
_TEXT	SEGMENT
_v4$ = -20						; size = 4
_this$ = -8						; size = 4
?Exec@TObjWarp@@UAEXXZ PROC				; TObjWarp::Exec, COMDAT
; _this$ = ecx

; 31   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __CB6E2F36_o_warp@cpp
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 32   :     RwReal v4;
; 33   : 
; 34   :     if (!(SETOBJ_PARAM->SETFlag_HHC & 0x400) && (v4 = (SETOBJ_PARAM->renderDistance + 1) * 100.0 * ((SETOBJ_PARAM->renderDistance + 1) * 100.0), setobjCheckRangeOut2(&SETOBJ_PARAM->position, v4)) || SETOBJ_PARAM->SETFlag_HHC & 4)  //#inline TObjSetObj::CheckMustKill((void))

  0002d	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00030	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00033	0f be 51 18	 movsx	 edx, BYTE PTR [ecx+24]
  00037	81 e2 00 04 00
	00		 and	 edx, 1024		; 00000400H
  0003d	75 5d		 jne	 SHORT $LN5@Exec
  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00045	0f be 51 2b	 movsx	 edx, BYTE PTR [ecx+43]
  00049	83 c2 01	 add	 edx, 1
  0004c	f2 0f 2a c2	 cvtsi2sd xmm0, edx
  00050	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4059000000000000
  00058	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0005b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0005e	0f be 51 2b	 movsx	 edx, BYTE PTR [ecx+43]
  00062	83 c2 01	 add	 edx, 1
  00065	f2 0f 2a ca	 cvtsi2sd xmm1, edx
  00069	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4059000000000000
  00071	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00075	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00079	f3 0f 11 45 ec	 movss	 DWORD PTR _v4$[ebp], xmm0
  0007e	51		 push	 ecx
  0007f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _v4$[ebp]
  00084	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00089	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0008c	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ?setobjCheckRangeOut2@@YAHPBURwV3d@@M@Z ; setobjCheckRangeOut2
  00095	83 c4 08	 add	 esp, 8
  00098	85 c0		 test	 eax, eax
  0009a	75 0f		 jne	 SHORT $LN4@Exec
$LN5@Exec:
  0009c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0009f	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000a2	0f be 51 18	 movsx	 edx, BYTE PTR [ecx+24]
  000a6	83 e2 04	 and	 edx, 4
  000a9	74 0a		 je	 SHORT $LN2@Exec
$LN4@Exec:

; 35   :     {
; 36   :         Kill();

  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	e8 00 00 00 00	 call	 ?Kill@TObject@@QAEXXZ	; TObject::Kill

; 37   :     }

  000b3	eb 24		 jmp	 SHORT $LN3@Exec
$LN2@Exec:

; 38   :     else
; 39   :     {
; 40   :         checkCollision();

  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b8	e8 00 00 00 00	 call	 ?checkCollision@TObjWarp@@QAEXXZ ; TObjWarp::checkCollision

; 41   :         C_COLLI.Entry(&SETOBJ_PARAM->position, &SETOBJ_PARAM->rotation);

  000bd	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  000c0	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  000c3	83 c1 0c	 add	 ecx, 12			; 0000000cH
  000c6	51		 push	 ecx
  000c7	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000ca	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000cd	50		 push	 eax
  000ce	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000d1	83 c1 30	 add	 ecx, 48			; 00000030H
  000d4	e8 00 00 00 00	 call	 ?Entry@C_COLLI@@QAEHPAURwV3d@@PAUsAngle@@@Z ; C_COLLI::Entry
$LN3@Exec:

; 42   :     }
; 43   : }

  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000e2	3b ec		 cmp	 ebp, esp
  000e4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
?Exec@TObjWarp@@UAEXXZ ENDP				; TObjWarp::Exec
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\o_warp.cpp
;	COMDAT ?checkCollision@TObjWarp@@QAEXXZ
_TEXT	SEGMENT
_v6$ = -32						; size = 4
_hitTarget$ = -20					; size = 4
_this$ = -8						; size = 4
?checkCollision@TObjWarp@@QAEXXZ PROC			; TObjWarp::checkCollision, COMDAT
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __CB6E2F36_o_warp@cpp
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 9    :     ::C_COLLI* hitTarget;
; 10   :     int v6;
; 11   : 
; 12   :     CCL_MASTER::ClearSearch();

  0002d	e8 00 00 00 00	 call	 ?ClearSearch@CCL_MASTER@@SAXXZ ; CCL_MASTER::ClearSearch
$LN2@checkColli:

; 13   :     while (1)

  00032	b8 01 00 00 00	 mov	 eax, 1
  00037	85 c0		 test	 eax, eax
  00039	0f 84 88 00 00
	00		 je	 $LN1@checkColli

; 14   :     {
; 15   :         hitTarget = C_COLLI.IsHitPlayer();

  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	83 c1 30	 add	 ecx, 48			; 00000030H
  00045	e8 00 00 00 00	 call	 ?IsHitPlayer@C_COLLI@@QAEPAU1@XZ ; C_COLLI::IsHitPlayer
  0004a	89 45 ec	 mov	 DWORD PTR _hitTarget$[ebp], eax

; 16   :         if (!hitTarget)

  0004d	83 7d ec 00	 cmp	 DWORD PTR _hitTarget$[ebp], 0
  00051	75 02		 jne	 SHORT $LN4@checkColli

; 17   :         {
; 18   :             break;

  00053	eb 72		 jmp	 SHORT $LN1@checkColli
$LN4@checkColli:

; 19   :         }
; 20   :         v6 = GetPlayerNumberFromCCLCharacterId(hitTarget->GetCharacterId());

  00055	8b 4d ec	 mov	 ecx, DWORD PTR _hitTarget$[ebp]
  00058	e8 00 00 00 00	 call	 ?GetCharacterId@C_COLLI@@QAEHXZ ; C_COLLI::GetCharacterId
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?GetPlayerNumberFromCCLCharacterId@@YAHH@Z ; GetPlayerNumberFromCCLCharacterId
  00063	83 c4 04	 add	 esp, 4
  00066	89 45 e0	 mov	 DWORD PTR _v6$[ebp], eax

; 21   :         //TObjCamera::currentCamera = playerTOp[v6]->teamNo;
; 22   :         if (v6 == teamTOp[playerTOp[v6]->teamNo]->GetLeaderPlayerNo())

  00069	8b 45 e0	 mov	 eax, DWORD PTR _v6$[ebp]
  0006c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?playerTOp@@3QAPAUTObjPlayer@@A ; playerTOp
  00072	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00075	0f be 82 be 00
	00 00		 movsx	 eax, BYTE PTR [edx+190]
  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?teamTOp@@3PAPAUTObjTeam@@A ; teamTOp
  00082	8b 0c 81	 mov	 ecx, DWORD PTR [ecx+eax*4]
  00085	e8 00 00 00 00	 call	 ?GetLeaderPlayerNo@TObjTeam@@QAEDXZ ; TObjTeam::GetLeaderPlayerNo
  0008a	0f be d0	 movsx	 edx, al
  0008d	39 55 e0	 cmp	 DWORD PTR _v6$[ebp], edx
  00090	75 30		 jne	 SHORT $LN5@checkColli

; 23   :         {
; 24   :             TObjCamera::WarpCameraAndPlayer((RwV3d*)&SETOBJ_PARAM->PARAM->data[4], playerTOp[v6]->teamNo);

  00092	8b 45 e0	 mov	 eax, DWORD PTR _v6$[ebp]
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?playerTOp@@3QAPAUTObjPlayer@@A ; playerTOp
  0009b	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0009e	0f b6 82 be 00
	00 00		 movzx	 eax, BYTE PTR [edx+190]
  000a5	50		 push	 eax
  000a6	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  000ac	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  000af	b9 01 00 00 00	 mov	 ecx, 1
  000b4	c1 e1 02	 shl	 ecx, 2
  000b7	03 c1		 add	 eax, ecx
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?WarpCameraAndPlayer@TObjCamera@@SAXPAURwV3d@@D@Z ; TObjCamera::WarpCameraAndPlayer
  000bf	83 c4 08	 add	 esp, 8
$LN5@checkColli:

; 25   :         }
; 26   :     }

  000c2	e9 6b ff ff ff	 jmp	 $LN2@checkColli
$LN1@checkColli:

; 27   : }

  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx
  000ca	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  000d0	3b ec		 cmp	 ebp, esp
  000d2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?checkCollision@TObjWarp@@QAEXXZ ENDP			; TObjWarp::checkCollision
_TEXT	ENDS
END
