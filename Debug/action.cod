; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28316.0 

	TITLE	C:\Users\DonutStopGaming\Desktop\Mod\action.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?Action@@3AAUACTION@@A				; Action
PUBLIC	?team1@@3DA					; team1
PUBLIC	?team2@@3DA					; team2
_BSS	SEGMENT
?team1@@3DA DB	01H DUP (?)				; team1
_BSS	ENDS
msvcjmc	SEGMENT
__F2BDCE38_pch@h DB 01H
__6EE8A1C6_mod@pch DB 01H
__C05A5D61_action@cpp DB 01H
__BB40F913_TObject@hpp DB 01H
msvcjmc	ENDS
_DATA	SEGMENT
?Action@@3AAUACTION@@A DD 08d66e8H			; Action
?team2@@3DA DB	01H					; team2
_DATA	ENDS
PUBLIC	?InitStageAndTeamInfo@ACTION@@QAEXXZ		; ACTION::InitStageAndTeamInfo
PUBLIC	?addFrame@ACTION@@SAXHPAU1@@Z			; ACTION::addFrame
PUBLIC	?addFrame_Hook@@YAXHPAUACTION@@@Z		; addFrame_Hook
PUBLIC	?InitStageAndTeamInfo@@YAXXZ			; InitStageAndTeamInfo
PUBLIC	__JustMyCode_Default
EXTRN	?addFrm@PARAM_TIME@@SAHH@Z:PROC			; PARAM_TIME::addFrm
EXTRN	?getGameTime@@YAHPAC00@Z:PROC			; getGameTime
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?pModeSwitch@@3AAPAUMODESWITCH@@A:DWORD		; pModeSwitch
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\action.cpp
;	COMDAT ?InitStageAndTeamInfo@@YAXXZ
_TEXT	SEGMENT
?InitStageAndTeamInfo@@YAXXZ PROC			; InitStageAndTeamInfo, COMDAT

; 19   : 	__asm
; 20   : 	{
; 21   : 		//push edx;
; 22   : 		mov ecx, edx;

  00000	8b ca		 mov	 ecx, edx

; 23   : 		call ACTION::InitStageAndTeamInfo;

  00002	e8 00 00 00 00	 call	 ?InitStageAndTeamInfo@ACTION@@QAEXXZ ; ACTION::InitStageAndTeamInfo

; 24   : 		//add esp, 0x4;
; 25   : 		ret;

  00007	c3		 ret	 0
?InitStageAndTeamInfo@@YAXXZ ENDP			; InitStageAndTeamInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\action.cpp
;	COMDAT ?addFrame_Hook@@YAXHPAUACTION@@@Z
_TEXT	SEGMENT
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
?addFrame_Hook@@YAXHPAUACTION@@@Z PROC			; addFrame_Hook, COMDAT

; 84   : 
; 85   : 	__asm
; 86   : 	{
; 87   : 		push edi;

  00000	57		 push	 edi

; 88   : 		push ecx;

  00001	51		 push	 ecx

; 89   : 		call ACTION::addFrame;

  00002	e8 00 00 00 00	 call	 ?addFrame@ACTION@@SAXHPAU1@@Z ; ACTION::addFrame

; 90   : 		add esp, 0x8;

  00007	83 c4 08	 add	 esp, 8

; 91   : 		ret;

  0000a	c3		 ret	 0
?addFrame_Hook@@YAXHPAUACTION@@@Z ENDP			; addFrame_Hook
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\action.cpp
;	COMDAT ?addFrame@ACTION@@SAXHPAU1@@Z
_TEXT	SEGMENT
_v1$ = -36						; size = 4
_v3$ = -24						; size = 4
_v2$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
?addFrame@ACTION@@SAXHPAU1@@Z PROC			; ACTION::addFrame, COMDAT

; 45   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __C05A5D61_action@cpp
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 46   : 	int v2;
; 47   : 	void** v3;
; 48   : 	signed char v1[4];
; 49   : 
; 50   : 	*(int*)v1 = a1;

  00032	8b 45 08	 mov	 eax, DWORD PTR _a1$[ebp]
  00035	89 45 dc	 mov	 DWORD PTR _v1$[ebp], eax

; 51   : 	if (a2->mode == ActionMode_Normal)

  00038	8b 45 0c	 mov	 eax, DWORD PTR _a2$[ebp]
  0003b	83 78 08 05	 cmp	 DWORD PTR [eax+8], 5
  0003f	0f 85 11 01 00
	00		 jne	 $LN1@addFrame

; 52   : 	{
; 53   : 		if (pModeSwitch->eventNo < 0 && !pModeSwitch->SFAScreen && !pModeSwitch->TimeStop && !pModeSwitch->SETObjInteraction)      // #inline MODESWITCH::GetModeSwitch(const(MODESWITCH_ENUM))

  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pModeSwitch@@3AAPAUMODESWITCH@@A ; pModeSwitch
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	83 79 40 00	 cmp	 DWORD PTR [ecx+64], 0
  00050	0f 8d 00 01 00
	00		 jge	 $LN1@addFrame
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pModeSwitch@@3AAPAUMODESWITCH@@A ; pModeSwitch
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	0f be 51 20	 movsx	 edx, BYTE PTR [ecx+32]
  00061	85 d2		 test	 edx, edx
  00063	0f 85 ed 00 00
	00		 jne	 $LN1@addFrame
  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pModeSwitch@@3AAPAUMODESWITCH@@A ; pModeSwitch
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	0f be 51 1f	 movsx	 edx, BYTE PTR [ecx+31]
  00074	85 d2		 test	 edx, edx
  00076	0f 85 da 00 00
	00		 jne	 $LN1@addFrame
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pModeSwitch@@3AAPAUMODESWITCH@@A ; pModeSwitch
  00081	8b 08		 mov	 ecx, DWORD PTR [eax]
  00083	0f be 51 21	 movsx	 edx, BYTE PTR [ecx+33]
  00087	85 d2		 test	 edx, edx
  00089	0f 85 c7 00 00
	00		 jne	 $LN1@addFrame

; 54   : 		{
; 55   : 			if (!a2->addCountDisabled)

  0008f	8b 45 0c	 mov	 eax, DWORD PTR _a2$[ebp]
  00092	83 b8 a4 02 00
	00 00		 cmp	 DWORD PTR [eax+676], 0
  00099	0f 85 b7 00 00
	00		 jne	 $LN1@addFrame

; 56   : 			{
; 57   : 				v3 = &a2->field_4;

  0009f	8b 45 0c	 mov	 eax, DWORD PTR _a2$[ebp]
  000a2	83 c0 04	 add	 eax, 4
  000a5	89 45 e8	 mov	 DWORD PTR _v3$[ebp], eax

; 58   : 				if (a2->timeoverFunction)

  000a8	8b 45 0c	 mov	 eax, DWORD PTR _a2$[ebp]
  000ab	83 b8 84 02 00
	00 00		 cmp	 DWORD PTR [eax+644], 0
  000b2	0f 84 91 00 00
	00		 je	 $LN5@addFrame

; 59   : 				{
; 60   : 					PARAM_TIME::addFrm(-1);

  000b8	6a ff		 push	 -1
  000ba	e8 00 00 00 00	 call	 ?addFrm@PARAM_TIME@@SAHH@Z ; PARAM_TIME::addFrm
  000bf	83 c4 04	 add	 esp, 4

; 61   : 					getGameTime(&v1[0], &v1[1], &v1[2]);

  000c2	b8 01 00 00 00	 mov	 eax, 1
  000c7	d1 e0		 shl	 eax, 1
  000c9	8d 4c 05 dc	 lea	 ecx, DWORD PTR _v1$[ebp+eax]
  000cd	51		 push	 ecx
  000ce	ba 01 00 00 00	 mov	 edx, 1
  000d3	c1 e2 00	 shl	 edx, 0
  000d6	8d 44 15 dc	 lea	 eax, DWORD PTR _v1$[ebp+edx]
  000da	50		 push	 eax
  000db	b9 01 00 00 00	 mov	 ecx, 1
  000e0	6b d1 00	 imul	 edx, ecx, 0
  000e3	8d 44 15 dc	 lea	 eax, DWORD PTR _v1$[ebp+edx]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?getGameTime@@YAHPAC00@Z ; getGameTime
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 62   : 					v2 = v1[1];

  000f0	b8 01 00 00 00	 mov	 eax, 1
  000f5	c1 e0 00	 shl	 eax, 0
  000f8	0f be 4c 05 dc	 movsx	 ecx, BYTE PTR _v1$[ebp+eax]
  000fd	89 4d f4	 mov	 DWORD PTR _v2$[ebp], ecx

; 63   : 					if (!v1[1])

  00100	b8 01 00 00 00	 mov	 eax, 1
  00105	c1 e0 00	 shl	 eax, 0
  00108	0f be 4c 05 dc	 movsx	 ecx, BYTE PTR _v1$[ebp+eax]
  0010d	85 c9		 test	 ecx, ecx
  0010f	75 36		 jne	 SHORT $LN7@addFrame

; 64   : 					{
; 65   : 						v2 = v1[2];

  00111	b8 01 00 00 00	 mov	 eax, 1
  00116	d1 e0		 shl	 eax, 1
  00118	0f be 4c 05 dc	 movsx	 ecx, BYTE PTR _v1$[ebp+eax]
  0011d	89 4d f4	 mov	 DWORD PTR _v2$[ebp], ecx

; 66   : 						if (!*(short*)&v1[2])

  00120	b8 01 00 00 00	 mov	 eax, 1
  00125	d1 e0		 shl	 eax, 1
  00127	0f bf 4c 05 dc	 movsx	 ecx, WORD PTR _v1$[ebp+eax]
  0012c	85 c9		 test	 ecx, ecx
  0012e	75 17		 jne	 SHORT $LN7@addFrame

; 67   : 						{
; 68   : 							v2 = ((int (*)(void))a2->timeoverFunction)();

  00130	8b 45 0c	 mov	 eax, DWORD PTR _a2$[ebp]
  00133	8b f4		 mov	 esi, esp
  00135	8b 88 84 02 00
	00		 mov	 ecx, DWORD PTR [eax+644]
  0013b	ff d1		 call	 ecx
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	89 45 f4	 mov	 DWORD PTR _v2$[ebp], eax
$LN7@addFrame:

; 69   : 						}
; 70   : 					}
; 71   : 				}

  00147	eb 0d		 jmp	 SHORT $LN1@addFrame
$LN5@addFrame:

; 72   : 				else
; 73   : 				{
; 74   : 					v2 = PARAM_TIME::addFrm(1);

  00149	6a 01		 push	 1
  0014b	e8 00 00 00 00	 call	 ?addFrm@PARAM_TIME@@SAHH@Z ; PARAM_TIME::addFrm
  00150	83 c4 04	 add	 esp, 4
  00153	89 45 f4	 mov	 DWORD PTR _v2$[ebp], eax
$LN1@addFrame:

; 75   : 				}
; 76   : 			}
; 77   : 		}
; 78   : 	}
; 79   : }

  00156	52		 push	 edx
  00157	8b cd		 mov	 ecx, ebp
  00159	50		 push	 eax
  0015a	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN12@addFrame
  00160	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00165	58		 pop	 eax
  00166	5a		 pop	 edx
  00167	5f		 pop	 edi
  00168	5e		 pop	 esi
  00169	5b		 pop	 ebx
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016d	33 cd		 xor	 ecx, ebp
  0016f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00174	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0017a	3b ec		 cmp	 ebp, esp
  0017c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00181	8b e5		 mov	 esp, ebp
  00183	5d		 pop	 ebp
  00184	c3		 ret	 0
  00185	0f 1f 00	 npad	 3
$LN12@addFrame:
  00188	01 00 00 00	 DD	 1
  0018c	00 00 00 00	 DD	 $LN11@addFrame
$LN11@addFrame:
  00190	dc ff ff ff	 DD	 -36			; ffffffdcH
  00194	04 00 00 00	 DD	 4
  00198	00 00 00 00	 DD	 $LN10@addFrame
$LN10@addFrame:
  0019c	76		 DB	 118			; 00000076H
  0019d	31		 DB	 49			; 00000031H
  0019e	00		 DB	 0
?addFrame@ACTION@@SAXHPAU1@@Z ENDP			; ACTION::addFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\DonutStopGaming\Desktop\Mod\action.cpp
;	COMDAT ?InitStageAndTeamInfo@ACTION@@QAEXXZ
_TEXT	SEGMENT
_i$1 = -20						; size = 4
_this$ = -8						; size = 4
?InitStageAndTeamInfo@ACTION@@QAEXXZ PROC		; ACTION::InitStageAndTeamInfo, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	b9 00 00 00 00	 mov	 ecx, OFFSET __C05A5D61_action@cpp
  00028	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 30   : 	pModeSwitch->is2PMode = 1;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pModeSwitch@@3AAPAUMODESWITCH@@A ; pModeSwitch
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	c6 41 1e 01	 mov	 BYTE PTR [ecx+30], 1

; 31   : 
; 32   : 	for (int i = 0; i < 64; ++i)

  00038	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _i$1[ebp], 0
  0003f	eb 09		 jmp	 SHORT $LN4@InitStageA
$LN2@InitStageA:
  00041	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00044	83 c0 01	 add	 eax, 1
  00047	89 45 ec	 mov	 DWORD PTR _i$1[ebp], eax
$LN4@InitStageA:
  0004a	83 7d ec 40	 cmp	 DWORD PTR _i$1[ebp], 64	; 00000040H
  0004e	7d 10		 jge	 SHORT $LN3@InitStageA

; 33   : 	{
; 34   : 		stageConnect[i] = 0;

  00050	8b 45 ec	 mov	 eax, DWORD PTR _i$1[ebp]
  00053	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	c7 44 81 38 00
	00 00 00	 mov	 DWORD PTR [ecx+eax*4+56], 0

; 35   : 	}

  0005e	eb e1		 jmp	 SHORT $LN2@InitStageA
$LN3@InitStageA:

; 36   : 
; 37   :  	teamKind[0] = team1;

  00060	0f be 05 00 00
	00 00		 movsx	 eax, BYTE PTR ?team1@@3DA ; team1
  00067	b9 04 00 00 00	 mov	 ecx, 4
  0006c	6b d1 00	 imul	 edx, ecx, 0
  0006f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00072	89 84 11 38 02
	00 00		 mov	 DWORD PTR [ecx+edx+568], eax

; 38   : 	teamKind[1] = team2;

  00079	0f be 05 00 00
	00 00		 movsx	 eax, BYTE PTR ?team2@@3DA ; team2
  00080	b9 04 00 00 00	 mov	 ecx, 4
  00085	c1 e1 00	 shl	 ecx, 0
  00088	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  0008b	89 84 0a 38 02
	00 00		 mov	 DWORD PTR [edx+ecx+568], eax

; 39   : 	teamKind[2] = -1;

  00092	b8 04 00 00 00	 mov	 eax, 4
  00097	d1 e0		 shl	 eax, 1
  00099	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	c7 84 01 38 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR [ecx+eax+568], -1

; 40   : 	teamKind[3] = -1;

  000a7	b8 04 00 00 00	 mov	 eax, 4
  000ac	6b c8 03	 imul	 ecx, eax, 3
  000af	8b 55 f8	 mov	 edx, DWORD PTR _this$[ebp]
  000b2	c7 84 0a 38 02
	00 00 ff ff ff
	ff		 mov	 DWORD PTR [edx+ecx+568], -1

; 41   : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  000c6	3b ec		 cmp	 ebp, esp
  000c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cd	8b e5		 mov	 esp, ebp
  000cf	5d		 pop	 ebp
  000d0	c3		 ret	 0
?InitStageAndTeamInfo@ACTION@@QAEXXZ ENDP		; ACTION::InitStageAndTeamInfo
_TEXT	ENDS
END
